services:
  poll:
    depends_on:
      - redis
    build:
      context: ./poll
    ports:
      - "5000:80"
    environment:
      - REDIS_HOST=redis
    networks:
      - poll-tier
    restart: always

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    networks:
      - poll-tier
      - back-tier
    restart: always

  worker:
    depends_on:
      - redis
      - db
    build:
      context: ./worker
    environment:
      -  REDIS_HOST=redis
      -  POSTGRES_HOST=db
      -  POSTGRES_PORT=5432
      - POSTGRES_DB=vote_db
      -  POSTGRES_USER=user
      - POSTGRES_PASSWORD=pass
    networks:
      - back-tier
    restart: always
 
  db:
    image: postgres:16
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=pass
      - POSTGRES_DB=vote_db
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./schema.sql:/docker-entrypoint-initdb.d/schema.sql
    networks:
      - back-tier
      - result-tier
    restart: always
 
  result:
    depends_on:
      - db
    build:
      context: ./result
    ports:
      - "5001:80"
    environment:
      -  POSTGRES_HOST=db
      -  POSTGRES_PORT=5432
      - POSTGRES_DB=vote_db
      -  POSTGRES_USER=user
      - POSTGRES_PASSWORD=pass
    networks:
      - result-tier
    restart: always

networks:
  poll-tier:
    driver: bridge
  result-tier:
    driver: bridge
  back-tier:
    driver: bridge
 
volumes:
  db-data: